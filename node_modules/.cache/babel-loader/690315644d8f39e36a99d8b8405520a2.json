{"remainingRequest":"D:\\Code\\Web\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\Code\\Web\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Code\\Web\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Web\\vue-element-admin\\src\\views\\excel\\export-excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Code\\Web\\vue-element-admin\\src\\views\\excel\\export-excel.vue","mtime":1672242736801},{"path":"D:\\Code\\Web\\vue-element-admin\\babel.config.js","mtime":1672242736758},{"path":"D:\\Code\\Web\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672242978934},{"path":"D:\\Code\\Web\\vue-element-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1672242978919},{"path":"D:\\Code\\Web\\vue-element-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672242978934},{"path":"D:\\Code\\Web\\vue-element-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1672242972231}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIGZyb20gIkQ6L0NvZGUvV2ViL3Z1ZS1lbGVtZW50LWFkbWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKaW1wb3J0IHsgZmV0Y2hMaXN0IH0gZnJvbSAnQC9hcGkvYXJ0aWNsZSc7CmltcG9ydCB7IHBhcnNlVGltZSB9IGZyb20gJ0AvdXRpbHMnOwovLyBvcHRpb25zIGNvbXBvbmVudHMKaW1wb3J0IEZpbGVuYW1lT3B0aW9uIGZyb20gJy4vY29tcG9uZW50cy9GaWxlbmFtZU9wdGlvbic7CmltcG9ydCBBdXRvV2lkdGhPcHRpb24gZnJvbSAnLi9jb21wb25lbnRzL0F1dG9XaWR0aE9wdGlvbic7CmltcG9ydCBCb29rVHlwZU9wdGlvbiBmcm9tICcuL2NvbXBvbmVudHMvQm9va1R5cGVPcHRpb24nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0V4cG9ydEV4Y2VsJywKICBjb21wb25lbnRzOiB7CiAgICBGaWxlbmFtZU9wdGlvbjogRmlsZW5hbWVPcHRpb24sCiAgICBBdXRvV2lkdGhPcHRpb246IEF1dG9XaWR0aE9wdGlvbiwKICAgIEJvb2tUeXBlT3B0aW9uOiBCb29rVHlwZU9wdGlvbgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBkb3dubG9hZExvYWRpbmc6IGZhbHNlLAogICAgICBmaWxlbmFtZTogJycsCiAgICAgIGF1dG9XaWR0aDogdHJ1ZSwKICAgICAgYm9va1R5cGU6ICd4bHN4JwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBmZXRjaExpc3QoKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhLml0ZW1zOwogICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURvd25sb2FkOiBmdW5jdGlvbiBoYW5kbGVEb3dubG9hZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIHRoaXMuZG93bmxvYWRMb2FkaW5nID0gdHJ1ZTsKICAgICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoJ0AvdmVuZG9yL0V4cG9ydDJFeGNlbCcpKTsKICAgICAgfSkudGhlbihmdW5jdGlvbiAoZXhjZWwpIHsKICAgICAgICB2YXIgdEhlYWRlciA9IFsnSWQnLCAnVGl0bGUnLCAnQXV0aG9yJywgJ1JlYWRpbmdzJywgJ0RhdGUnXTsKICAgICAgICB2YXIgZmlsdGVyVmFsID0gWydpZCcsICd0aXRsZScsICdhdXRob3InLCAncGFnZXZpZXdzJywgJ2Rpc3BsYXlfdGltZSddOwogICAgICAgIHZhciBsaXN0ID0gX3RoaXMyLmxpc3Q7CiAgICAgICAgdmFyIGRhdGEgPSBfdGhpczIuZm9ybWF0SnNvbihmaWx0ZXJWYWwsIGxpc3QpOwogICAgICAgIGV4Y2VsLmV4cG9ydF9qc29uX3RvX2V4Y2VsKHsKICAgICAgICAgIGhlYWRlcjogdEhlYWRlciwKICAgICAgICAgIGRhdGE6IGRhdGEsCiAgICAgICAgICBmaWxlbmFtZTogX3RoaXMyLmZpbGVuYW1lLAogICAgICAgICAgYXV0b1dpZHRoOiBfdGhpczIuYXV0b1dpZHRoLAogICAgICAgICAgYm9va1R5cGU6IF90aGlzMi5ib29rVHlwZQogICAgICAgIH0pOwogICAgICAgIF90aGlzMi5kb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZm9ybWF0SnNvbjogZnVuY3Rpb24gZm9ybWF0SnNvbihmaWx0ZXJWYWwsIGpzb25EYXRhKSB7CiAgICAgIHJldHVybiBqc29uRGF0YS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gZmlsdGVyVmFsLm1hcChmdW5jdGlvbiAoaikgewogICAgICAgICAgaWYgKGogPT09ICd0aW1lc3RhbXAnKSB7CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRpbWUodltqXSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gdltqXTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACAC;QACA;QACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QAAA;MAAA;QACA;QACA;QACA;QACA;QACAC;UACAC;UACAb;UACAI;UACAC;UACAC;QACA;QACA;MACA;IACA;IACAQ;MACA;QAAA;UACA;YACA;UACA;YACA;UACA;QACA;MAAA;IACA;EACA;AACA","names":["name","components","FilenameOption","AutoWidthOption","BookTypeOption","data","list","listLoading","downloadLoading","filename","autoWidth","bookType","created","methods","fetchData","fetchList","handleDownload","excel","header","formatJson"],"sourceRoot":"src/views/excel","sources":["export-excel.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n\r\n    <div>\r\n      <FilenameOption v-model=\"filename\" />\r\n      <AutoWidthOption v-model=\"autoWidth\" />\r\n      <BookTypeOption v-model=\"bookType\" />\r\n      <el-button :loading=\"downloadLoading\" style=\"margin:0 0 20px 20px;\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">\r\n        Export Excel\r\n      </el-button>\r\n      <a href=\"https://panjiachen.github.io/vue-element-admin-site/feature/component/excel.html\" target=\"_blank\" style=\"margin-left:15px;\">\r\n        <el-tag type=\"info\">Documentation</el-tag>\r\n      </a>\r\n    </div>\r\n\r\n    <el-table v-loading=\"listLoading\" :data=\"list\" element-loading-text=\"Loading...\" border fit highlight-current-row>\r\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.$index }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Title\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.title }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag>{{ scope.row.author }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.pageviews }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"Date\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\" />\r\n          <span>{{ scope.row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fetchList } from '@/api/article'\r\nimport { parseTime } from '@/utils'\r\n// options components\r\nimport FilenameOption from './components/FilenameOption'\r\nimport AutoWidthOption from './components/AutoWidthOption'\r\nimport BookTypeOption from './components/BookTypeOption'\r\n\r\nexport default {\r\n  name: 'ExportExcel',\r\n  components: { FilenameOption, AutoWidthOption, BookTypeOption },\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true,\r\n      downloadLoading: false,\r\n      filename: '',\r\n      autoWidth: true,\r\n      bookType: 'xlsx'\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      fetchList().then(response => {\r\n        this.list = response.data.items\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleDownload() {\r\n      this.downloadLoading = true\r\n      import('@/vendor/Export2Excel').then(excel => {\r\n        const tHeader = ['Id', 'Title', 'Author', 'Readings', 'Date']\r\n        const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\r\n        const list = this.list\r\n        const data = this.formatJson(filterVal, list)\r\n        excel.export_json_to_excel({\r\n          header: tHeader,\r\n          data,\r\n          filename: this.filename,\r\n          autoWidth: this.autoWidth,\r\n          bookType: this.bookType\r\n        })\r\n        this.downloadLoading = false\r\n      })\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => {\r\n        if (j === 'timestamp') {\r\n          return parseTime(v[j])\r\n        } else {\r\n          return v[j]\r\n        }\r\n      }))\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.radio-label {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  line-height: 40px;\r\n  padding: 0 12px 0 30px;\r\n}\r\n</style>\r\n"]}]}