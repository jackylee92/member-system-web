{"remainingRequest":"D:\\Code\\Web\\member-system\\node_modules\\babel-loader\\lib\\index.js!D:\\Code\\Web\\member-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Code\\Web\\member-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code\\Web\\member-system\\src\\views\\excel\\select-excel.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Code\\Web\\member-system\\src\\views\\excel\\select-excel.vue","mtime":1672242736802},{"path":"D:\\Code\\Web\\member-system\\babel.config.js","mtime":1672242736758},{"path":"D:\\Code\\Web\\member-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672242978934},{"path":"D:\\Code\\Web\\member-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1672242978919},{"path":"D:\\Code\\Web\\member-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672242978934},{"path":"D:\\Code\\Web\\member-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1672242972231}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIGZyb20gIkQ6L0NvZGUvV2ViL21lbWJlci1zeXN0ZW0vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2ludGVyb3BSZXF1aXJlV2lsZGNhcmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgppbXBvcnQgeyBmZXRjaExpc3QgfSBmcm9tICdAL2FwaS9hcnRpY2xlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZWxlY3RFeGNlbCcsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGxpc3Q6IG51bGwsCiAgICAgIGxpc3RMb2FkaW5nOiB0cnVlLAogICAgICBtdWx0aXBsZVNlbGVjdGlvbjogW10sCiAgICAgIGRvd25sb2FkTG9hZGluZzogZmFsc2UsCiAgICAgIGZpbGVuYW1lOiAnJwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlOwogICAgICBmZXRjaExpc3QodGhpcy5saXN0UXVlcnkpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMubGlzdCA9IHJlc3BvbnNlLmRhdGEuaXRlbXM7CiAgICAgICAgX3RoaXMubGlzdExvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKSB7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB2YWw7CiAgICB9LAogICAgaGFuZGxlRG93bmxvYWQ6IGZ1bmN0aW9uIGhhbmRsZURvd25sb2FkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgaWYgKHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5kb3dubG9hZExvYWRpbmcgPSB0cnVlOwogICAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgcmV0dXJuIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoJ0AvdmVuZG9yL0V4cG9ydDJFeGNlbCcpKTsKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChleGNlbCkgewogICAgICAgICAgdmFyIHRIZWFkZXIgPSBbJ0lkJywgJ1RpdGxlJywgJ0F1dGhvcicsICdSZWFkaW5ncycsICdEYXRlJ107CiAgICAgICAgICB2YXIgZmlsdGVyVmFsID0gWydpZCcsICd0aXRsZScsICdhdXRob3InLCAncGFnZXZpZXdzJywgJ2Rpc3BsYXlfdGltZSddOwogICAgICAgICAgdmFyIGxpc3QgPSBfdGhpczIubXVsdGlwbGVTZWxlY3Rpb247CiAgICAgICAgICB2YXIgZGF0YSA9IF90aGlzMi5mb3JtYXRKc29uKGZpbHRlclZhbCwgbGlzdCk7CiAgICAgICAgICBleGNlbC5leHBvcnRfanNvbl90b19leGNlbCh7CiAgICAgICAgICAgIGhlYWRlcjogdEhlYWRlciwKICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgZmlsZW5hbWU6IF90aGlzMi5maWxlbmFtZQogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpczIuJHJlZnMubXVsdGlwbGVUYWJsZS5jbGVhclNlbGVjdGlvbigpOwogICAgICAgICAgX3RoaXMyLmRvd25sb2FkTG9hZGluZyA9IGZhbHNlOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1lc3NhZ2UoewogICAgICAgICAgbWVzc2FnZTogJ1BsZWFzZSBzZWxlY3QgYXQgbGVhc3Qgb25lIGl0ZW0nLAogICAgICAgICAgdHlwZTogJ3dhcm5pbmcnCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBmb3JtYXRKc29uOiBmdW5jdGlvbiBmb3JtYXRKc29uKGZpbHRlclZhbCwganNvbkRhdGEpIHsKICAgICAgcmV0dXJuIGpzb25EYXRhLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiBmaWx0ZXJWYWwubWFwKGZ1bmN0aW9uIChqKSB7CiAgICAgICAgICByZXR1cm4gdltqXTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MAAA;MACA;MACAC;QACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACA;QACA;QACA;UAAA;QAAA;UACA;UACA;UACA;UACA;UACAC;YACAC;YACAb;YACAK;UACA;UACA;UACA;QACA;MACA;QACA;UACAS;UACAC;QACA;MACA;IACA;IACAC;MACA;QAAA;UAAA;QAAA;MAAA;IACA;EACA;AACA","names":["name","data","list","listLoading","multipleSelection","downloadLoading","filename","created","methods","fetchData","fetchList","handleSelectionChange","handleDownload","excel","header","message","type","formatJson"],"sourceRoot":"src/views/excel","sources":["select-excel.vue"],"sourcesContent":["<template>\r\n  <div class=\"app-container\">\r\n    <el-input v-model=\"filename\" placeholder=\"Please enter the file name (default excel-list)\" style=\"width:350px;\" prefix-icon=\"el-icon-document\" />\r\n    <el-button :loading=\"downloadLoading\" style=\"margin-bottom:20px\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">\r\n      Export Selected Items\r\n    </el-button>\r\n    <a href=\"https://panjiachen.github.io/vue-element-admin-site/feature/component/excel.html\" target=\"_blank\" style=\"margin-left:15px;\">\r\n      <el-tag type=\"info\">Documentation</el-tag>\r\n    </a>\r\n    <el-table\r\n      ref=\"multipleTable\"\r\n      v-loading=\"listLoading\"\r\n      :data=\"list\"\r\n      element-loading-text=\"拼命加载中\"\r\n      border\r\n      fit\r\n      highlight-current-row\r\n      @selection-change=\"handleSelectionChange\"\r\n    >\r\n      <el-table-column type=\"selection\" align=\"center\" />\r\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.$index }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Title\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.title }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-tag>{{ scope.row.author }}</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          {{ scope.row.pageviews }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column align=\"center\" label=\"PDate\" width=\"220\">\r\n        <template slot-scope=\"scope\">\r\n          <i class=\"el-icon-time\" />\r\n          <span>{{ scope.row.display_time }}</span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { fetchList } from '@/api/article'\r\n\r\nexport default {\r\n  name: 'SelectExcel',\r\n  data() {\r\n    return {\r\n      list: null,\r\n      listLoading: true,\r\n      multipleSelection: [],\r\n      downloadLoading: false,\r\n      filename: ''\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchData()\r\n  },\r\n  methods: {\r\n    fetchData() {\r\n      this.listLoading = true\r\n      fetchList(this.listQuery).then(response => {\r\n        this.list = response.data.items\r\n        this.listLoading = false\r\n      })\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    handleDownload() {\r\n      if (this.multipleSelection.length) {\r\n        this.downloadLoading = true\r\n        import('@/vendor/Export2Excel').then(excel => {\r\n          const tHeader = ['Id', 'Title', 'Author', 'Readings', 'Date']\r\n          const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\r\n          const list = this.multipleSelection\r\n          const data = this.formatJson(filterVal, list)\r\n          excel.export_json_to_excel({\r\n            header: tHeader,\r\n            data,\r\n            filename: this.filename\r\n          })\r\n          this.$refs.multipleTable.clearSelection()\r\n          this.downloadLoading = false\r\n        })\r\n      } else {\r\n        this.$message({\r\n          message: 'Please select at least one item',\r\n          type: 'warning'\r\n        })\r\n      }\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]))\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}